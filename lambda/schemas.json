{
  "addedAt": {
    "description": "The time (in ms since POSIX epoch) when added to the server.",
    "example": 1633522963509,
    "type": "integer"
  },
  "appriseApiUrl": {
    "description": "The full URL where the Apprise API to use is located.",
    "nullable": true,
    "type": "string"
  },
  "audioFile": {
    "description": "An audio file for a book. Includes audio metadata and track numbers.",
    "properties": {
      "addedAt": {
        "$ref": "#/components/schemas/addedAt"
      },
      "bitRate": {
        "description": "The bit rate (in bit/s) of the audio file.",
        "example": 64000,
        "type": "integer"
      },
      "channelLayout": {
        "description": "The layout of the audio file's channels.",
        "example": "stereo",
        "type": "string"
      },
      "channels": {
        "description": "The number of channels the audio file has.",
        "example": 2,
        "type": "integer"
      },
      "chapters": {
        "description": "If the audio file is part of an audiobook, the chapters the file contains.",
        "items": {
          "$ref": "#/components/schemas/bookChapter"
        },
        "type": "array"
      },
      "codec": {
        "description": "The codec of the audio file.",
        "example": "mp3",
        "type": "string"
      },
      "discNumFromFilename": {
        "description": "The disc number of the audio file as determined from the file's name. Will be null if unknown.",
        "nullable": true,
        "type": "string"
      },
      "discNumFromMeta": {
        "description": "The disc number of the audio file as pulled from the file's metadata. Will be null if unknown.",
        "nullable": true,
        "type": "string"
      },
      "duration": {
        "$ref": "#/components/schemas/durationSec"
      },
      "embeddedCoverArt": {
        "description": "The type of embedded cover art in the audio file. Will be null if none exists.",
        "nullable": true,
        "type": "string"
      },
      "error": {
        "description": "Any error with the audio file. Will be null if there is none.",
        "nullable": true,
        "type": "string"
      },
      "exclude": {
        "description": "Whether the audio file has been marked for exclusion.",
        "type": "boolean"
      },
      "format": {
        "description": "The format of the audio file.",
        "example": "MP2/3 (MPEG audio layer 2/3)",
        "type": "string"
      },
      "index": {
        "description": "The index of the audio file.",
        "example": 1,
        "type": "integer"
      },
      "ino": {
        "$ref": "#/components/schemas/inode"
      },
      "invalid": {
        "description": "Whether the audio file is missing from the server.",
        "type": "boolean"
      },
      "language": {
        "description": "The language of the audio file.",
        "nullable": true,
        "type": "string"
      },
      "manuallyVerified": {
        "description": "Whether the audio file has been manually verified by a user.",
        "type": "boolean"
      },
      "metadata": {
        "$ref": "#/components/schemas/fileMetadata"
      },
      "metaTags": {
        "$ref": "#/components/schemas/audioMetaTags"
      },
      "mimeType": {
        "description": "The MIME type of the audio file.",
        "example": "audio/mpeg",
        "type": "string"
      },
      "timeBase": {
        "description": "The time base of the audio file.",
        "example": "1/14112000",
        "type": "string"
      },
      "trackNumFromFilename": {
        "description": "The track number of the audio file as determined from the file's name. Will be null if unknown.",
        "example": 1,
        "nullable": true,
        "type": "integer"
      },
      "trackNumFromMeta": {
        "description": "The track number of the audio file as pulled from the file's metadata. Will be null if unknown.",
        "example": 1,
        "nullable": true,
        "type": "integer"
      },
      "updatedAt": {
        "$ref": "#/components/schemas/updatedAt"
      }
    },
    "type": "object"
  },
  "audioMetaTags": {
    "description": "ID3 metadata tags pulled from the audio file on import. Only non-null tags will be returned in requests.",
    "properties": {
      "tagAlbum": {
        "example": "SOT Bk01",
        "nullable": true,
        "type": "string"
      },
      "tagAlbumArtist": {
        "example": "Terry Goodkind",
        "nullable": true,
        "type": "string"
      },
      "tagArtist": {
        "example": "Terry Goodkind",
        "nullable": true,
        "type": "string"
      },
      "tagASIN": {
        "nullable": true,
        "type": "string"
      },
      "tagComment": {
        "nullable": true,
        "type": "string"
      },
      "tagComposer": {
        "example": "Terry Goodkind",
        "nullable": true,
        "type": "string"
      },
      "tagDate": {
        "nullable": true,
        "type": "string"
      },
      "tagDescription": {
        "nullable": true,
        "type": "string"
      },
      "tagDisc": {
        "nullable": true,
        "type": "string"
      },
      "tagEncodedBy": {
        "nullable": true,
        "type": "string"
      },
      "tagEncoder": {
        "nullable": true,
        "type": "string"
      },
      "tagGenre": {
        "example": "Audiobook Fantasy",
        "nullable": true,
        "type": "string"
      },
      "tagIsbn": {
        "nullable": true,
        "type": "string"
      },
      "tagISRC": {
        "nullable": true,
        "type": "string"
      },
      "tagLanguage": {
        "nullable": true,
        "type": "string"
      },
      "tagMusicBrainzAlbumArtistId": {
        "nullable": true,
        "type": "string"
      },
      "tagMusicBrainzAlbumId": {
        "nullable": true,
        "type": "string"
      },
      "tagMusicBrainzArtistId": {
        "nullable": true,
        "type": "string"
      },
      "tagMusicBrainzTrackId": {
        "nullable": true,
        "type": "string"
      },
      "tagOriginalYear": {
        "nullable": true,
        "type": "string"
      },
      "tagOverdriveMediaMarker": {
        "nullable": true,
        "type": "string"
      },
      "tagPublisher": {
        "nullable": true,
        "type": "string"
      },
      "tagReleaseCountry": {
        "nullable": true,
        "type": "string"
      },
      "tagReleaseStatus": {
        "nullable": true,
        "type": "string"
      },
      "tagReleaseType": {
        "nullable": true,
        "type": "string"
      },
      "tagSeries": {
        "nullable": true,
        "type": "string"
      },
      "tagSeriesPart": {
        "nullable": true,
        "type": "string"
      },
      "tagSubtitle": {
        "nullable": true,
        "type": "string"
      },
      "tagTitle": {
        "example": "Wizards First Rule 01",
        "nullable": true,
        "type": "string"
      },
      "tagTrack": {
        "example": "01/20",
        "nullable": true,
        "type": "string"
      }
    },
    "type": "object"
  },
  "AudioTrack": {
    "description": "Represents an audio track with various properties.",
    "properties": {
      "codec": {
        "description": "The codec used for the audio track.",
        "example": "aac",
        "nullable": true,
        "type": "string"
      },
      "contentUrl": {
        "description": "The URL where the audio track content is located.",
        "example": "`/api/items/${itemId}/file/${audioFile.ino}`",
        "nullable": true,
        "type": "string"
      },
      "duration": {
        "description": "The duration of the audio track in seconds.",
        "example": null,
        "format": "float",
        "nullable": true,
        "type": "number"
      },
      "index": {
        "description": "The index of the audio track.",
        "example": null,
        "nullable": true,
        "type": "integer"
      },
      "metadata": {
        "$ref": "#/components/schemas/fileMetadata"
      },
      "mimeType": {
        "description": "The MIME type of the audio track.",
        "example": null,
        "nullable": true,
        "type": "string"
      },
      "startOffset": {
        "description": "The start offset of the audio track in seconds.",
        "example": null,
        "format": "float",
        "nullable": true,
        "type": "number"
      },
      "title": {
        "description": "The title of the audio track.",
        "example": null,
        "nullable": true,
        "type": "string"
      }
    },
    "type": "object"
  },
  "author": {
    "description": "An author object which includes a description and image path. The library items and series associated with the author are optionally included.",
    "properties": {
      "addedAt": {
        "$ref": "#/components/schemas/addedAt"
      },
      "asin": {
        "$ref": "#/components/schemas/authorAsin"
      },
      "description": {
        "$ref": "#/components/schemas/authorDescription"
      },
      "id": {
        "$ref": "#/components/schemas/authorId"
      },
      "imagePath": {
        "$ref": "#/components/schemas/authorImagePath"
      },
      "libraryItems": {
        "description": "The items associated with the author",
        "items": {
          "$ref": "#/components/schemas/libraryItemMinified"
        },
        "type": "array"
      },
      "name": {
        "$ref": "#/components/schemas/authorName"
      },
      "series": {
        "description": "The series associated with the author",
        "items": {
          "$ref": "#/components/schemas/authorSeries"
        },
        "type": "array"
      },
      "updatedAt": {
        "$ref": "#/components/schemas/updatedAt"
      }
    },
    "type": "object"
  },
  "authorAsin": {
    "description": "The Audible identifier (ASIN) of the author. Will be null if unknown. Not the Amazon identifier.",
    "example": "B000APZOQA",
    "nullable": true,
    "type": "string"
  },
  "authorDescription": {
    "description": "The new description of the author.",
    "example": "Terry Goodkind is a",
    "nullable": true,
    "type": "string"
  },
  "authorExpanded": {
    "allOf": [
      {
        "$ref": "#/components/schemas/author"
      },
      {
        "properties": {
          "numBooks": {
            "description": "The number of books associated with the author in the library.",
            "example": 1,
            "type": "integer"
          }
        },
        "type": "object"
      }
    ],
    "description": "The author schema with the total number of books in the library.",
    "type": "object"
  },
  "authorId": {
    "description": "The ID of the author.",
    "example": "e4bb1afb-4a4f-4dd6-8be0-e615d233185b",
    "format": "uuid",
    "type": "string"
  },
  "authorImagePath": {
    "description": "The absolute path for the author image. This will be in the `metadata/` directory. Will be null if there is no image.",
    "example": "/metadata/authors/aut_z3leimgybl7uf3y4ab.jpg",
    "nullable": true,
    "type": "string"
  },
  "authorMerged": {
    "description": "Whether the author was merged with another author. Will not exist if author was updated.",
    "nullable": true,
    "type": "boolean"
  },
  "authorName": {
    "description": "The name of the author.",
    "example": "Terry Goodkind",
    "type": "string"
  },
  "authorSearchName": {
    "description": "The name of the author to use for searching.",
    "example": "Terry Goodkind",
    "type": "string"
  },
  "authorSeries": {
    "description": "Series and the included library items that an author has written.",
    "properties": {
      "id": {
        "$ref": "#/components/schemas/seriesId"
      },
      "items": {
        "description": "The items in the series. Each library item's media's metadata will have a `series` attribute, a `Series Sequence`, which is the matching series.",
        "items": {
          "$ref": "#/components/schemas/libraryItemMinified"
        },
        "type": "array"
      },
      "name": {
        "$ref": "#/components/schemas/seriesName"
      }
    },
    "type": "object"
  },
  "authorUpdated": {
    "description": "Whether the author was updated without errors. Will not exist if author was merged.",
    "nullable": true,
    "type": "boolean"
  },
  "autoDownloadEpisodes": {
    "description": "Whether episodes are automatically downloaded.",
    "type": "boolean"
  },
  "bodyTemplate": {
    "description": "The template for the notification body.",
    "example": "{{episodeTitle}} has been added to {{libraryName}} library.",
    "type": "string"
  },
  "bookChapter": {
    "description": "A book chapter. Includes the title and timestamps.",
    "properties": {
      "end": {
        "description": "When in the book (in seconds) the chapter ends.",
        "example": 6004.6675,
        "type": "number"
      },
      "id": {
        "description": "The ID of the book chapter.",
        "example": 0,
        "type": "integer"
      },
      "start": {
        "description": "When in the book (in seconds) the chapter starts.",
        "example": 0,
        "type": "integer"
      },
      "title": {
        "description": "The title of the chapter.",
        "example": "Wizards First Rule 01 Chapter 1",
        "type": "string"
      }
    },
    "type": "object"
  },
  "bookCoverPath": {
    "description": "The absolute path on the server of the cover file. Will be null if there is no cover.",
    "example": "/audiobooks/Terry Goodkind/Sword of Truth/Wizards First Rule/cover.jpg",
    "nullable": true,
    "type": "string"
  },
  "bookMetadataBase": {
    "description": "The base book metadata object for minified, normal, and extended schemas to inherit from.",
    "properties": {
      "asin": {
        "description": "The ASIN of the book. Will be null if unknown.",
        "example": "B002V0QK4C",
        "nullable": true,
        "type": "string"
      },
      "description": {
        "description": "A description for the book. Will be null if empty.",
        "example": "The masterpiece that started Terry Goodkind's New York Times bestselling epic Sword of Truth In the aftermath of the brutal murder of his father, a mysterious woman, Kahlan Amnell, appears in Richard Cypher's forest sanctuary seeking help...and more. His world, his very beliefs, are shattered when ancient debts come due with thundering violence. In a dark age it takes courage to live, and more than mere courage to challenge those who hold dominion, Richard and Kahlan must take up that challenge or become the next victims. Beyond awaits a bewitching land where even the best of their hearts could betray them. Yet, Richard fears nothing so much as what secrets his sword might reveal about his own soul. Falling in love would destroy them - for reasons Richard can't imagine and Kahlan dare not say. In their darkest hour, hunted relentlessly, tormented by treachery and loss, Kahlan calls upon Richard to reach beyond his sword - to invoke within himself something more noble. Neither knows that the rules of battle have just changed...or that their time has run out. Wizard's First Rule is the beginning. One book. One Rule. Witness the birth of a legend.",
        "nullable": true,
        "type": "string"
      },
      "explicit": {
        "description": "Whether the book has been marked as explicit.",
        "example": false,
        "type": "boolean"
      },
      "genres": {
        "description": "The genres of the book.",
        "example": ["Fantasy", "Sci-Fi", "Nonfiction: History"],
        "items": {
          "type": "string"
        },
        "type": "array"
      },
      "isbn": {
        "description": "The ISBN of the book. Will be null if unknown.",
        "nullable": true,
        "type": "string"
      },
      "language": {
        "description": "The language of the book. Will be null if unknown.",
        "nullable": true,
        "type": "string"
      },
      "publishedDate": {
        "description": "The date the book was published. Will be null if unknown.",
        "nullable": true,
        "type": "string"
      },
      "publishedYear": {
        "description": "The year the book was published. Will be null if unknown.",
        "example": "2008",
        "nullable": true,
        "type": "string"
      },
      "publisher": {
        "description": "The publisher of the book. Will be null if unknown.",
        "example": "Brilliance Audio",
        "nullable": true,
        "type": "string"
      },
      "subtitle": {
        "description": "The subtitle of the book. Will be null if there is no subtitle.",
        "nullable": true,
        "type": "string"
      },
      "title": {
        "description": "The title of the book. Will be null if unknown.",
        "example": "Wizards First Rule",
        "nullable": true,
        "type": "string"
      }
    },
    "type": "object"
  },
  "bookMetadataMinified": {
    "allOf": [
      {
        "$ref": "#/components/schemas/bookMetadataBase"
      },
      {
        "properties": {
          "authorName": {
            "description": "The name of the book's author(s).",
            "example": "Terry Goodkind",
            "type": "string"
          },
          "authorNameLF": {
            "description": "The name of the book's author(s) with last names first.",
            "example": "Goodkind, Terry",
            "type": "string"
          },
          "narratorName": {
            "description": "The name of the audiobook's narrator(s).",
            "example": "Sam Tsoutsouvas",
            "type": "string"
          },
          "seriesName": {
            "description": "The name of the book's series.",
            "example": "Sword of Truth",
            "type": "string"
          },
          "titleIgnorePrefix": {
            "description": "The title of the book with any prefix moved to the end.",
            "type": "string"
          }
        },
        "type": "object"
      }
    ],
    "description": "The minified metadata for a book in the database.",
    "type": "object"
  },
  "bookMinified": {
    "description": "Minified book schema. Does not depend on `bookBase` because there's pretty much no overlap.",
    "properties": {
      "coverPath": {
        "$ref": "#/components/schemas/bookCoverPath"
      },
      "duration": {
        "$ref": "#/components/schemas/durationSec"
      },
      "ebookFormat": {
        "description": "The format of ebook of the book. Will be null if the book is an audiobook.",
        "nullable": true,
        "type": "string"
      },
      "metadata": {
        "$ref": "#/components/schemas/bookMetadataMinified"
      },
      "numAudioFiles": {
        "description": "The number of audio files the book has.",
        "example": 1,
        "type": "integer"
      },
      "numChapters": {
        "description": "The number of chapters the book has.",
        "example": 1,
        "type": "integer"
      },
      "numInvalidAudioFiles": {
        "description": "The number of invalid audio files the book has.",
        "example": 0,
        "type": "integer"
      },
      "numMissingParts": {
        "description": "The total number of missing parts the book has.",
        "example": 0,
        "type": "integer"
      },
      "numTracks": {
        "description": "The number of tracks the book's audio files have.",
        "example": 1,
        "type": "integer"
      },
      "size": {
        "$ref": "#/components/schemas/size"
      },
      "tags": {
        "$ref": "#/components/schemas/tags"
      }
    },
    "type": "object"
  },
  "collapseSeries": {
    "description": "Whether collapse series was set in the request.",
    "example": true,
    "type": "boolean"
  },
  "createdAt": {
    "description": "The time (in ms since POSIX epoch) when was created.",
    "example": 1633522963509,
    "type": "integer"
  },
  "durationSec": {
    "description": "The total length (in seconds) of the item or file.",
    "example": 33854.905,
    "type": "number"
  },
  "EmailSettings": {
    "description": "The email settings configuration for the server. This includes the credentials to send e-books and an array of e-reader devices.",
    "properties": {
      "ereaderDevices": {
        "description": "List of configured e-reader devices.",
        "items": {
          "$ref": "#/components/schemas/EreaderDeviceObject"
        },
        "type": "array"
      },
      "fromAddress": {
        "description": "The default \"from\" email address for outgoing emails.",
        "nullable": true,
        "type": "string"
      },
      "host": {
        "description": "The SMTP host address.",
        "nullable": true,
        "type": "string"
      },
      "id": {
        "description": "The unique identifier for the email settings. Currently this is always `email-settings`",
        "example": "email-settings",
        "type": "string"
      },
      "pass": {
        "description": "The password for SMTP authentication.",
        "nullable": true,
        "type": "string"
      },
      "port": {
        "description": "The port number for the SMTP server.",
        "example": 465,
        "format": "int32",
        "type": "integer"
      },
      "rejectUnauthorized": {
        "description": "Indicates if unauthorized SSL/TLS certificates should be rejected.",
        "example": true,
        "type": "boolean"
      },
      "secure": {
        "description": "Indicates if the connection should use SSL/TLS.",
        "example": true,
        "type": "boolean"
      },
      "testAddress": {
        "description": "The test email address used for sending test emails.",
        "nullable": true,
        "type": "string"
      },
      "user": {
        "description": "The username for SMTP authentication.",
        "nullable": true,
        "type": "string"
      }
    },
    "required": ["id", "port", "secure", "ereaderDevices"],
    "type": "object"
  },
  "enabled": {
    "default": false,
    "description": "Whether the notification is enabled.",
    "type": "boolean"
  },
  "EreaderDeviceObject": {
    "description": "An e-reader device configured to receive EPUB through e-mail.",
    "properties": {
      "availabilityOption": {
        "description": "The availability option for the device.",
        "enum": ["adminOrUp", "userOrUp", "guestOrUp", "specificUsers"],
        "type": "string"
      },
      "email": {
        "description": "The email address associated with the e-reader device.",
        "type": "string"
      },
      "name": {
        "$ref": "#/components/schemas/ereaderName"
      },
      "users": {
        "description": "List of specific users allowed to access the device.",
        "items": {
          "type": "string"
        },
        "type": "array"
      }
    },
    "required": ["name", "email", "availabilityOption"],
    "type": "object"
  },
  "ereaderName": {
    "description": "The name of the e-reader device.",
    "type": "string"
  },
  "fileMetadata": {
    "description": "The metadata for a file, including the path, size, and unix timestamps of the file.",
    "nullable": true,
    "properties": {
      "birthtimeMs": {
        "description": "The time (in ms since POSIX epoch) when the file was created on disk. Will be 0 if unknown.",
        "example": 0,
        "type": "integer"
      },
      "ctimeMs": {
        "description": "The time (in ms since POSIX epoch) when the file status was changed on disk.",
        "example": 1645978261001,
        "type": "integer"
      },
      "ext": {
        "description": "The file extension of the file.",
        "example": ".mp3",
        "type": "string"
      },
      "filename": {
        "description": "The filename of the file.",
        "example": "Wizards First Rule 01.mp3",
        "type": "string"
      },
      "mtimeMs": {
        "description": "The time (in ms since POSIX epoch) when the file was last modified on disk.",
        "example": 1632223180278,
        "type": "integer"
      },
      "path": {
        "description": "The absolute path on the server of the file.",
        "example": "/audiobooks/Terry Goodkind/Sword of Truth/Wizards First Rule/Terry Goodkind - SOT Bk01 - Wizards First Rule 01.mp3",
        "type": "string"
      },
      "relPath": {
        "description": "The path of the file, relative to the book's or podcast's folder.",
        "example": "Wizards First Rule 01.mp3",
        "type": "string"
      },
      "size": {
        "$ref": "#/components/schemas/size"
      }
    },
    "type": "object"
  },
  "filterBy": {
    "description": "The field to filter by from the request. TODO",
    "example": "media.metadata.title",
    "type": "string"
  },
  "folder": {
    "description": "Folder used in library",
    "properties": {
      "addedAt": {
        "$ref": "#/components/schemas/addedAt"
      },
      "fullPath": {
        "description": "The path on the server for the folder. (Read Only)",
        "example": "/podcasts",
        "type": "string"
      },
      "id": {
        "$ref": "#/components/schemas/folderId"
      },
      "libraryId": {
        "$ref": "#/components/schemas/libraryId"
      }
    },
    "type": "object"
  },
  "folderId": {
    "description": "The ID of the folder.",
    "example": "e4bb1afb-4a4f-4dd6-8be0-e615d233185b",
    "format": "uuid",
    "type": "string"
  },
  "imageFormat": {
    "default": "jpeg",
    "description": "The requested output format.",
    "example": "webp",
    "type": "string"
  },
  "imageHeight": {
    "default": null,
    "description": "The requested height of image in pixels. If `null`, the height is scaled to maintain aspect ratio based on the requested width.",
    "example": 600,
    "nullable": true,
    "type": "integer"
  },
  "imageRaw": {
    "default": false,
    "description": "Return the raw image without scaling if true.",
    "type": "boolean"
  },
  "imageUrl": {
    "description": "The URL of the image to add to the server",
    "example": "https://images-na.ssl-images-amazon.com/images/I/51NoQTm33OL.__01_SX120_CR0,0,120,120__.jpg",
    "format": "uri",
    "type": "string"
  },
  "imageWidth": {
    "default": 400,
    "description": "The requested width of image in pixels.",
    "example": 400,
    "type": "integer"
  },
  "inode": {
    "description": "The inode of the item in the file system.",
    "example": "649644248522215260",
    "format": "[0-9]*",
    "type": "string"
  },
  "library": {
    "description": "A library object which includes either books or podcasts.",
    "properties": {
      "createdAt": {
        "$ref": "#/components/schemas/createdAt"
      },
      "displayOrder": {
        "description": "Display position of the library in the list of libraries. Must be >= 1.",
        "example": 1,
        "type": "integer"
      },
      "folders": {
        "description": "The folders that belong to the library.",
        "items": {
          "$ref": "#/components/schemas/folder"
        },
        "type": "array"
      },
      "icon": {
        "description": "The selected icon for the library. See Library Icons for a list of possible icons.",
        "example": "audiobookshelf",
        "type": "string"
      },
      "id": {
        "$ref": "#/components/schemas/libraryId"
      },
      "lastUpdate": {
        "$ref": "#/components/schemas/updatedAt"
      },
      "mediaType": {
        "description": "The type of media that the library contains. Will be `book` or `podcast`. (Read Only)",
        "example": "book",
        "type": "string"
      },
      "name": {
        "$ref": "#/components/schemas/libraryName"
      },
      "provider": {
        "description": "Preferred metadata provider for the library. See Metadata Providers for a list of possible providers.",
        "example": "audible",
        "type": "string"
      },
      "settings": {
        "$ref": "#/components/schemas/librarySettings"
      }
    },
    "type": "object"
  },
  "libraryDisplayOrder": {
    "description": "The display order of the library. Must be >= 1.",
    "example": 1,
    "minimum": 1,
    "type": "integer"
  },
  "libraryFolders": {
    "description": "The folders of the library. Only specify the fullPath.",
    "items": {
      "$ref": "#/components/schemas/folder"
    },
    "type": "array"
  },
  "libraryIcon": {
    "description": "The icon of the library. See Library Icons for a list of possible icons.",
    "example": "audiobookshelf",
    "type": "string"
  },
  "libraryId": {
    "description": "The ID of the library.",
    "example": "e4bb1afb-4a4f-4dd6-8be0-e615d233185b",
    "format": "uuid",
    "type": "string"
  },
  "libraryIdNullable": {
    "description": "The ID of the library. Applies to all libraries if `null`.",
    "example": "e4bb1afb-4a4f-4dd6-8be0-e615d233185b",
    "format": "uuid",
    "nullable": true,
    "type": "string"
  },
  "libraryInclude": {
    "description": "The fields to include in the response. The only current option is `rssfeed`.",
    "example": "rssfeed",
    "type": "string"
  },
  "libraryItemBase": {
    "description": "Base library item schema",
    "properties": {
      "addedAt": {
        "$ref": "#/components/schemas/addedAt"
      },
      "birthtimeMs": {
        "description": "The time (in ms since POSIX epoch) when the library item was created on disk. Will be 0 if unknown.",
        "type": "integer"
      },
      "ctimeMs": {
        "description": "The time (in ms since POSIX epoch) when the library item status was changed on disk.",
        "type": "integer"
      },
      "folderId": {
        "$ref": "#/components/schemas/folderId"
      },
      "id": {
        "$ref": "#/components/schemas/libraryItemId"
      },
      "ino": {
        "$ref": "#/components/schemas/inode"
      },
      "isFile": {
        "description": "Whether the library item is a single file in the root of the library folder.",
        "type": "boolean"
      },
      "isInvalid": {
        "description": "Whether the library item was scanned and no longer has media files.",
        "type": "boolean"
      },
      "isMissing": {
        "description": "Whether the library item was scanned and no longer exists.",
        "type": "boolean"
      },
      "libraryId": {
        "$ref": "#/components/schemas/libraryId"
      },
      "mediaType": {
        "$ref": "#/components/schemas/mediaType"
      },
      "mtimeMs": {
        "description": "The time (in ms since POSIX epoch) when the library item was last modified on disk.",
        "type": "integer"
      },
      "oldLibraryItemId": {
        "$ref": "#/components/schemas/oldLibraryItemId"
      },
      "path": {
        "description": "The path of the library item on the server.",
        "type": "string"
      },
      "relPath": {
        "description": "The path, relative to the library folder, of the library item.",
        "type": "string"
      },
      "updatedAt": {
        "$ref": "#/components/schemas/updatedAt"
      }
    },
    "type": "object"
  },
  "libraryItemId": {
    "description": "The ID of library items after 2.3.0.",
    "example": "e4bb1afb-4a4f-4dd6-8be0-e615d233185b",
    "format": "uuid",
    "type": "string"
  },
  "libraryItemMinified": {
    "allOf": [
      {
        "$ref": "#/components/schemas/libraryItemBase"
      },
      {
        "properties": {
          "media": {
            "$ref": "#/components/schemas/mediaMinified"
          }
        },
        "type": "object"
      }
    ],
    "description": "A single item on the server, like a book or podcast. Minified media format.",
    "type": "object"
  },
  "libraryItemSequence": {
    "allOf": [
      {
        "$ref": "#/components/schemas/libraryItemBase"
      },
      {
        "properties": {
          "sequence": {
            "$ref": "#/components/schemas/sequence"
          }
        },
        "type": "object"
      }
    ],
    "description": "A single item on the server, like a book or podcast. Includes series sequence information.",
    "type": "object"
  },
  "libraryMediaType": {
    "description": "The type of media that the library contains. Must be `book` or `podcast`.",
    "example": "book",
    "type": "string"
  },
  "libraryName": {
    "description": "The name of the library.",
    "example": "My Audiobooks",
    "type": "string"
  },
  "libraryProvider": {
    "description": "Preferred metadata provider for the library. See Metadata Providers for a list of possible providers.",
    "example": "audible",
    "type": "string"
  },
  "librarySettings": {
    "description": "The settings for the library.",
    "properties": {
      "audiobooksOnly": {
        "description": "Whether the library should ignore ebook files and only allow ebook files to be supplementary.",
        "example": false,
        "type": "boolean"
      },
      "autoScanCronExpression": {
        "description": "The cron expression for when to automatically scan the library folders. If null, automatic scanning will be disabled.",
        "example": "0 0 0 * * *",
        "nullable": true,
        "type": "string"
      },
      "coverAspectRatio": {
        "description": "Whether the library should use square book covers. Must be 0 (for false) or 1 (for true).",
        "example": 1,
        "type": "integer"
      },
      "disableWatcher": {
        "description": "Whether to disable the folder watcher for the library.",
        "example": false,
        "type": "boolean"
      },
      "hideSingleBookSeries": {
        "description": "Whether to hide series with only one book.",
        "example": false,
        "type": "boolean"
      },
      "metadataPrecedence": {
        "description": "The precedence of metadata sources. See Metadata Providers for a list of possible providers.",
        "example": [
          "folderStructure",
          "audioMetatags",
          "nfoFile",
          "txtFiles",
          "opfFile",
          "absMetadata"
        ],
        "items": {
          "type": "string"
        },
        "type": "array"
      },
      "onlyShowLaterBooksInContinueSeries": {
        "description": "Whether to only show books in a series after the highest series sequence.",
        "example": false,
        "type": "boolean"
      },
      "podcastSearchRegion": {
        "description": "The region to use when searching for podcasts.",
        "example": "us",
        "type": "string"
      },
      "skipMatchingMediaWithAsin": {
        "description": "Whether to skip matching books that already have an ASIN.",
        "example": false,
        "type": "boolean"
      },
      "skipMatchingMediaWithIsbn": {
        "description": "Whether to skip matching books that already have an ISBN.",
        "example": false,
        "type": "boolean"
      }
    },
    "type": "object"
  },
  "limit": {
    "default": 0,
    "description": "The number of items to return. If 0, no items are returned.",
    "example": 10,
    "type": "integer"
  },
  "maxFailedAttempts": {
    "default": 5,
    "description": "The maximum number of times a notification fails before being disabled.",
    "minimum": 0,
    "type": "integer"
  },
  "maxNotificationQueue": {
    "description": "The maximum number of notifications in the notification queue before events are ignored.",
    "type": "integer"
  },
  "mediaMinified": {
    "description": "The minified media of the library item.",
    "oneOf": [
      {
        "$ref": "#/components/schemas/bookMinified"
      }
    ]
  },
  "mediaType": {
    "description": "The type of media, will be book or podcast.",
    "enum": ["book", "podcast"],
    "type": "string"
  },
  "minified": {
    "default": false,
    "description": "Return minified items if true.",
    "example": true,
    "type": "boolean"
  },
  "Notification": {
    "properties": {
      "bodyTemplate": {
        "$ref": "#/components/schemas/bodyTemplate"
      },
      "createdAt": {
        "$ref": "#/components/schemas/createdAt"
      },
      "enabled": {
        "$ref": "#/components/schemas/enabled"
      },
      "eventName": {
        "$ref": "#/components/schemas/notificationEventName"
      },
      "id": {
        "$ref": "#/components/schemas/notificationId"
      },
      "lastAttemptFailed": {
        "description": "Whether the last notification attempt failed.",
        "type": "boolean"
      },
      "lastFiredAt": {
        "description": "The time (in ms since POSIX epoch) when the notification was last fired. Will be null if the notification has not fired.",
        "nullable": true,
        "type": "integer"
      },
      "libraryId": {
        "$ref": "#/components/schemas/libraryIdNullable"
      },
      "numConsecutiveFailedAttempts": {
        "default": 0,
        "description": "The number of consecutive times the notification has failed.",
        "type": "integer"
      },
      "numTimesFired": {
        "default": 0,
        "description": "The number of times the notification has fired.",
        "type": "integer"
      },
      "titleTemplate": {
        "$ref": "#/components/schemas/titleTemplate"
      },
      "type": {
        "$ref": "#/components/schemas/notificationType"
      },
      "urls": {
        "$ref": "#/components/schemas/urls"
      }
    },
    "type": "object"
  },
  "NotificationEvent": {
    "properties": {
      "defaults": {
        "properties": {
          "body": {
            "description": "The default body template for notifications using the notification event.",
            "type": "string"
          },
          "title": {
            "description": "The default title template for notifications using the notification event.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "description": {
        "description": "The description of the notification event.",
        "type": "string"
      },
      "libraryMediaType": {
        "description": "The type of media of the library the notification depends on existing. Will not exist if requiresLibrary is false.",
        "nullable": true,
        "type": "string"
      },
      "name": {
        "description": "The name of the notification event. The names and allowable values are defined at https://github.com/advplyr/audiobookshelf/blob/master/server/utils/notifications.js",
        "type": "string"
      },
      "requiresLibrary": {
        "description": "Whether the notification event depends on a library existing.",
        "type": "boolean"
      },
      "testData": {
        "additionalProperties": {
          "type": "string"
        },
        "description": "The keys of the testData object will match the list of variables. The values will be the data used when sending a test notification.",
        "type": "object"
      },
      "variables": {
        "description": "The variables of the notification event that can be used in the notification templates.",
        "items": {
          "type": "string"
        },
        "type": "array"
      }
    },
    "type": "object"
  },
  "notificationEventName": {
    "description": "The name of the event the notification will fire on.",
    "enum": [
      "onPodcastEpisodeDownloaded",
      "onBackupCompleted",
      "onBackupFailed",
      "onTest"
    ],
    "type": "string"
  },
  "notificationId": {
    "description": "The ID of the notification.",
    "example": "notification-settings",
    "type": "string"
  },
  "NotificationSettings": {
    "properties": {
      "appriseApiUrl": {
        "$ref": "#/components/schemas/appriseApiUrl"
      },
      "appriseType": {
        "description": "The type of Apprise that will be used. At the moment, only api is available.",
        "type": "string"
      },
      "id": {
        "$ref": "#/components/schemas/notificationId"
      },
      "maxFailedAttempts": {
        "$ref": "#/components/schemas/maxFailedAttempts"
      },
      "maxNotificationQueue": {
        "$ref": "#/components/schemas/maxNotificationQueue"
      },
      "notificationDelay": {
        "description": "The time (in ms) between notification pushes.",
        "type": "integer"
      },
      "notifications": {
        "description": "The set notifications.",
        "items": {
          "$ref": "#/components/schemas/Notification"
        },
        "type": "array"
      }
    },
    "type": "object"
  },
  "notificationType": {
    "default": "info",
    "description": "The notification's type.",
    "enum": ["info", "success", "warning", "failure"],
    "nullable": true,
    "type": "string"
  },
  "oldLibraryItemId": {
    "description": "The ID of library items on server version 2.2.23 and before.",
    "example": "li_o78uaoeuh78h6aoeif",
    "format": "li_[a-z0-9]{18}",
    "nullable": true,
    "type": "string"
  },
  "oldPodcastId": {
    "description": "The ID of podcasts on server version 2.2.23 and before.",
    "example": "pod_o78uaoeuh78h6aoeif",
    "format": "pod_[a-z0-9]{18}",
    "nullable": true,
    "type": "string"
  },
  "page": {
    "default": 0,
    "description": "The page number (zero indexed) to return. If no limit is specified, then page will have no effect.",
    "example": 1,
    "type": "integer"
  },
  "Podcast": {
    "description": "A podcast containing multiple episodes.",
    "properties": {
      "autoDownloadEpisodes": {
        "$ref": "#/components/schemas/autoDownloadEpisodes"
      },
      "autoDownloadSchedule": {
        "description": "The schedule for automatic episode downloads, in cron format.",
        "nullable": true,
        "type": "string"
      },
      "coverPath": {
        "description": "The file path to the podcast's cover image.",
        "nullable": true,
        "type": "string"
      },
      "duration": {
        "description": "The total duration of all episodes in seconds.",
        "type": "integer"
      },
      "episodes": {
        "description": "The episodes of the podcast.",
        "items": {
          "$ref": "#/components/schemas/PodcastEpisode"
        },
        "type": "array"
      },
      "id": {
        "$ref": "#/components/schemas/podcastId"
      },
      "lastCoverSearch": {
        "description": "The timestamp of the last cover search.",
        "nullable": true,
        "type": "integer"
      },
      "lastCoverSearchQuery": {
        "description": "The query used for the last cover search.",
        "nullable": true,
        "type": "string"
      },
      "lastEpisodeCheck": {
        "description": "The timestamp of the last episode check.",
        "type": "integer"
      },
      "latestEpisodePublished": {
        "description": "The timestamp of the most recently published episode.",
        "type": "integer"
      },
      "libraryItemId": {
        "$ref": "#/components/schemas/libraryItemId"
      },
      "maxEpisodesToKeep": {
        "description": "The maximum number of episodes to keep.",
        "type": "integer"
      },
      "maxNewEpisodesToDownload": {
        "description": "The maximum number of new episodes to download when automatically downloading epsiodes.",
        "type": "integer"
      },
      "metadata": {
        "$ref": "#/components/schemas/PodcastMetadata"
      },
      "numTracks": {
        "description": "The number of tracks (episodes) in the podcast.",
        "type": "integer"
      },
      "size": {
        "description": "The total size of all episodes in bytes.",
        "type": "integer"
      },
      "tags": {
        "description": "The tags associated with the podcast.",
        "items": {
          "type": "string"
        },
        "type": "array"
      }
    },
    "type": "object"
  },
  "PodcastEpisode": {
    "description": "A single episode of a podcast.",
    "properties": {
      "addedAt": {
        "$ref": "#/components/schemas/addedAt"
      },
      "audioFile": {
        "$ref": "#/components/schemas/audioFile"
      },
      "audioTrack": {
        "$ref": "#/components/schemas/AudioTrack"
      },
      "chapters": {
        "description": "The chapters within the episode.",
        "items": {
          "type": "object"
        },
        "type": "array"
      },
      "description": {
        "description": "The description of the episode.",
        "nullable": true,
        "type": "string"
      },
      "duration": {
        "$ref": "#/components/schemas/durationSec"
      },
      "enclosure": {
        "additionalProperties": true,
        "description": "The enclosure object containing additional episode data.",
        "nullable": true,
        "type": "object"
      },
      "episode": {
        "description": "The episode number within the season.",
        "nullable": true,
        "type": "string"
      },
      "episodeType": {
        "description": "The type of episode (e.g., full, trailer).",
        "nullable": true,
        "type": "string"
      },
      "guid": {
        "description": "The globally unique identifier for the episode.",
        "nullable": true,
        "type": "string"
      },
      "id": {
        "$ref": "#/components/schemas/podcastId"
      },
      "index": {
        "description": "The index of the episode within the podcast.",
        "nullable": true,
        "type": "integer"
      },
      "libraryItemId": {
        "$ref": "#/components/schemas/libraryItemId"
      },
      "oldEpisodeId": {
        "$ref": "#/components/schemas/oldPodcastId"
      },
      "podcastId": {
        "$ref": "#/components/schemas/podcastId"
      },
      "pubDate": {
        "description": "The publication date of the episode.",
        "nullable": true,
        "type": "string"
      },
      "publishedAt": {
        "$ref": "#/components/schemas/createdAt"
      },
      "season": {
        "description": "The season number of the episode.",
        "nullable": true,
        "type": "string"
      },
      "size": {
        "$ref": "#/components/schemas/size"
      },
      "subtitle": {
        "description": "The subtitle of the episode.",
        "nullable": true,
        "type": "string"
      },
      "title": {
        "description": "The title of the episode.",
        "nullable": true,
        "type": "string"
      },
      "updatedAt": {
        "$ref": "#/components/schemas/updatedAt"
      }
    },
    "type": "object"
  },
  "podcastId": {
    "description": "The ID of podcasts and podcast episodes after 2.3.0.",
    "example": "e4bb1afb-4a4f-4dd6-8be0-e615d233185b",
    "format": "uuid",
    "type": "string"
  },
  "PodcastMetadata": {
    "description": "Metadata for a podcast.",
    "properties": {
      "author": {
        "description": "The author of the podcast.",
        "nullable": true,
        "type": "string"
      },
      "description": {
        "description": "The description of the podcast.",
        "nullable": true,
        "type": "string"
      },
      "explicit": {
        "description": "Whether the podcast contains explicit content.",
        "type": "boolean"
      },
      "feedUrl": {
        "description": "The URL of the podcast feed.",
        "nullable": true,
        "type": "string"
      },
      "genres": {
        "description": "The genres of the podcast.",
        "items": {
          "type": "string"
        },
        "type": "array"
      },
      "imageUrl": {
        "description": "The URL of the podcast's image.",
        "nullable": true,
        "type": "string"
      },
      "itunesArtistId": {
        "description": "The iTunes artist ID of the podcast.",
        "nullable": true,
        "type": "string"
      },
      "itunesId": {
        "description": "The iTunes ID of the podcast.",
        "nullable": true,
        "type": "string"
      },
      "itunesPageUrl": {
        "description": "The URL of the podcast's iTunes page.",
        "nullable": true,
        "type": "string"
      },
      "language": {
        "description": "The language of the podcast.",
        "nullable": true,
        "type": "string"
      },
      "releaseDate": {
        "description": "The release date of the podcast.",
        "format": "date-time",
        "nullable": true,
        "type": "string"
      },
      "title": {
        "description": "The title of the podcast.",
        "nullable": true,
        "type": "string"
      },
      "type": {
        "description": "The type of podcast (e.g., episodic, serial).",
        "nullable": true,
        "type": "string"
      }
    },
    "type": "object"
  },
  "region": {
    "default": "us",
    "description": "The region used to search.",
    "example": "us",
    "type": "string"
  },
  "sequence": {
    "description": "The position in the series the book is.",
    "nullable": true,
    "type": "string"
  },
  "series": {
    "description": "A series object which includes the name and description of the series.",
    "properties": {
      "addedAt": {
        "$ref": "#/components/schemas/addedAt"
      },
      "description": {
        "$ref": "#/components/schemas/seriesDescription"
      },
      "id": {
        "$ref": "#/components/schemas/seriesId"
      },
      "name": {
        "$ref": "#/components/schemas/seriesName"
      },
      "updatedAt": {
        "$ref": "#/components/schemas/updatedAt"
      }
    },
    "type": "object"
  },
  "seriesBooks": {
    "description": "A series object which includes the name and books in the series.",
    "properties": {
      "addedAt": {
        "$ref": "#/components/schemas/addedAt"
      },
      "books": {
        "description": "The library items that contain the books in the series. A sequence attribute that denotes the position in the series the book is in, is tacked on.",
        "items": {
          "$ref": "#/components/schemas/libraryItemSequence"
        },
        "type": "array"
      },
      "id": {
        "$ref": "#/components/schemas/seriesId"
      },
      "name": {
        "$ref": "#/components/schemas/seriesName"
      },
      "nameIgnorePrefix": {
        "description": "The name of the series with any prefix moved to the end.",
        "type": "string"
      },
      "nameIgnorePrefixSort": {
        "description": "The name of the series with any prefix removed.",
        "type": "string"
      },
      "totalDuration": {
        "description": "The combined duration (in seconds) of all books in the series.",
        "type": "number"
      },
      "type": {
        "description": "Will always be `series`.",
        "type": "string"
      }
    },
    "type": "object"
  },
  "seriesDescription": {
    "description": "A description for the series. Will be null if there is none.",
    "example": "The Sword of Truth is a series of twenty one epic fantasy novels written by Terry Goodkind.",
    "nullable": true,
    "type": "string"
  },
  "seriesId": {
    "description": "The ID of the series.",
    "example": "e4bb1afb-4a4f-4dd6-8be0-e615d233185b",
    "format": "uuid",
    "type": "string"
  },
  "seriesName": {
    "description": "The name of the series.",
    "example": "Sword of Truth",
    "type": "string"
  },
  "seriesProgress": {
    "description": "The user's progress of a series.",
    "properties": {
      "isFinished": {
        "description": "Whether the series is finished.",
        "type": "boolean"
      },
      "libraryItemIds": {
        "description": "The IDs of the library items in the series.",
        "items": {
          "$ref": "#/components/schemas/libraryItemId"
        },
        "type": "array"
      },
      "libraryItemIdsFinished": {
        "description": "The IDs of the library items in the series that are finished.",
        "items": {
          "$ref": "#/components/schemas/libraryItemId"
        },
        "type": "array"
      }
    },
    "type": "object"
  },
  "seriesWithProgressAndRSS": {
    "description": "A series object which includes the name and progress of the series.",
    "oneOf": [
      {
        "$ref": "#/components/schemas/series"
      },
      {
        "properties": {
          "progress": {
            "$ref": "#/components/schemas/seriesProgress"
          },
          "rssFeed": {
            "description": "The RSS feed for the series.",
            "example": "TBD",
            "type": "string"
          }
        },
        "type": "object"
      }
    ],
    "type": "object"
  },
  "size": {
    "description": "The total size (in bytes) of the item or file.",
    "example": 268824228,
    "type": "integer"
  },
  "sortBy": {
    "description": "The field to sort by from the request.",
    "example": "media.metadata.title",
    "type": "string"
  },
  "sortDesc": {
    "description": "Whether to sort in descending order.",
    "example": true,
    "type": "boolean"
  },
  "tags": {
    "description": "Tags applied to items.",
    "example": ["To Be Read", "Genre: Nonfiction"],
    "items": {
      "type": "string"
    },
    "type": "array"
  },
  "titleTemplate": {
    "description": "The template for the notification title.",
    "example": "New {{podcastTitle}} Episode!",
    "type": "string"
  },
  "total": {
    "description": "The total number of items in the response.",
    "example": 100,
    "type": "integer"
  },
  "updatedAt": {
    "description": "The time (in ms since POSIX epoch) when last updated.",
    "example": 1633522963509,
    "type": "integer"
  },
  "urls": {
    "description": "The Apprise URLs to use for the notification.",
    "example": "http://192.168.0.3:8000/notify/my-cool-notification",
    "items": {
      "type": "string"
    },
    "type": "array"
  }
}
